{
    // Use IntelliSense to learn about possible attributes.
    // Hover to view descriptions of existing attributes.
    // For more information, visit: https://go.microsoft.com/fwlink/?linkid=830387
    "version": "0.2.0",
    "configurations": [
        {
            "type": "node",
            "request": "launch",
            "name": "Launch Node.js (Test)",
            "preLaunchTask": "npm",
            "program": "${workspaceFolder}/../__out/main.js",
            "cwd": "${workspaceFolder}/../test",
            "args": [
                "-varAsLet__",
                "-text",
                "tsconfig.json"
            ]
        },
        {
            "type": "node",
            "request": "launch",
            "name": "Launch Node.js (JSLib)",
            "preLaunchTask": "npm",
            "program": "${workspaceFolder}/../__out/main.js",
            "cwd": "${workspaceFolder}/../experiments/jslib",
            "args": [
                "-singleModule",
                "tsconfig.json"
            ]
        },
        {
            "type": "node",
            "request": "launch",
            "name": "Launch Node.js (Babylon)",
            "preLaunchTask": "npm",
            "program": "${workspaceFolder}/../__out/main.js",
            "cwd": "${workspaceFolder}/../thirdparty/Babylon.js/src",
            "args": [
                "-jslib",
                "-varAsLet",
                "tsconfig.json"
            ]
        },
        {
            "type": "node",
            "request": "launch",
            "name": "Launch Node.js (Babylon Client)",
            "preLaunchTask": "npm",
            "program": "${workspaceFolder}/../__out/main.js",
            "cwd": "${workspaceFolder}/../experiments/BABYLON",
            "args": [
                "-jslib",
                "-varAsLet",
                "tsconfig.json"
            ]
        },
        {
            "type": "node",
            "request": "launch",
            "name": "Launch Node.js(Watch) (Babylon Client)",
            "preLaunchTask": "npm",
            "program": "${workspaceFolder}/../__out/main.js",
            "cwd": "${workspaceFolder}/../experiments/BABYLON",
            "args": [
                "-watch",
                "-jslib",
                "-varAsLet",
                "tsconfig.json"
            ]
        },
        {
            "type": "node",
            "request": "launch",
            "name": "Launch TS-Node",
            "runtimeExecutable": "${workspaceFolder}/../node_modules/.bin/ts-node",
            "program": "${workspaceFolder}/../src/main.ts",
            "args": [
                "tsconfig.json"
            ],
            "sourceMaps": true,
            "outFiles": [
              "${workspaceRoot}/../__out/**/*.js"
            ],
            "protocol": "inspector"
        },
        {
            "type": "node",
            "request": "launch",
            "name": "Mocha Tests",
            "program": "${workspaceFolder}/../node_modules/mocha/bin/_mocha",
            "args": [
                "-u",
                "tdd",
                "--timeout",
                "999999",
                "--colors",
                "-r",
                "ts-node/register",
                "${workspaceFolder}/../spec/**/*.spec.ts"
            ],
            "internalConsoleOptions": "openOnSessionStart",
            "cwd": "${workspaceFolder}/../"
        },
        {
            "type": "node",
            "request": "launch",
            "name": "Mocha Tests - Single",
            "program": "${workspaceFolder}/../node_modules/mocha/bin/_mocha",
            "args": [
                "-u",
                "tdd",
                "--timeout",
                "999999",
                "--colors",
                "-r",
                "ts-node/register",
                "${workspaceFolder}/../spec/**/variable_declarations.spec.ts"
            ],
            "internalConsoleOptions": "openOnSessionStart",
            "cwd": "${workspaceFolder}/../"
        }
    ]
}
